{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{481:function(t,e,i){\"use strict\";i.r(e);var a=i(2),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[i(\"ul\",[i(\"li\",[t._v(\"《git教程》https://www.liaoxuefeng.com/wiki/896043488029600 remote set-url origin git@github.com:“仓库地址”\")])]),t._v(\" \"),i(\"p\",[t._v(\"git config --global user.name “git用户名”\")]),t._v(\" \"),i(\"p\",[t._v(\"git config –global user.email “git用户邮箱”\")]),t._v(\" \"),i(\"p\",[t._v(\"ssh -T git@github.com\")]),t._v(\" \"),i(\"p\",[t._v(\"2、创建本地库\")]),t._v(\" \"),i(\"p\",[t._v(\"mkidir learngit //自定义文件夹\\ncd learngit\")]),t._v(\" \"),i(\"p\",[t._v(\"touch test.md //创建test.md文件\\npwd //显示当前目录\")]),t._v(\" \"),i(\"p\",[t._v(\"3、常用CRT\")]),t._v(\" \"),i(\"p\",[t._v(\"git init //初始化代码仓库\\ngit add learngit.txt     //-A:参数把所有要提交的文件修改放到暂存区\\ngit commit -m 'add a file'                      //把暂存区的所有内容提交到当前分支\\ngit status                                            //查看工作区状态\\ngit diff                                                //查看文件修改内容\\ngit log                                                //查看提交历史\\ngit log --pretty=oneline                       //单行显示\\ngit reset --hard HEAD^　　　　　　　　 //回退到上一个版本，其中（HEAD^^(上上版本),HEAD~100(往上100个版本)）\")]),t._v(\" \"),i(\"p\",[t._v(\"commit id                                          //(版本号) 可回到指定版本\\ngit reflog                                           //查看历史命令\")]),t._v(\" \"),i(\"p\",[t._v(\"其中说明(\\n工作区（Working Directory）\\n版本库（Repository） #.git\\nstage(index) 暂存区\\nmain Git自动创建的分支\\nHEAD 指针\")]),t._v(\" \"),i(\"p\",[t._v(\"git diff HEAD -- \"),i(\"file\",[t._v(\"                                  //查看工作区和版本库里最新版本的区别\\ngit checkout -- \"),i(\"file\",[t._v(\"                                   //用版本库的版本替换工作区的版本，无论是工作区的修改还是删除，都可以'一键还原'\\ngit reset HEAD \"),i(\"file\",[t._v(\"                                   //把暂存区的修改撤销掉，重新放回工作区。\\ngit rm \"),i(\"file\",[t._v(\"                                               //删除文件，若文件已提交到版本库，不用担心误删，但是只能恢复文件到最新版本\")])],1)],1)],1)],1),t._v(\" \"),i(\"p\",[t._v(\"4、创建SSH Key，建立本地Git仓库和GitHub仓库之间的传输的秘钥\")]),t._v(\" \"),i(\"p\",[t._v(\"ssh-keygen -t rsa -C '1250377062@qq.com'                                                    //创建SSH Key\\ngit remote add origin git@github.com:username/repostery.git                  //关联本地仓库，远程库的名字为origin\")]),t._v(\" \"),i(\"p\",[t._v(\"//第一次把当前分支main推送到远程，-u参数不但推送，而且将本地的分支和远程的分支关联起来\\ngit push -u origin main\\ngit push origin main                                                                //把当前分支main推送到远程\\ngit clone git@github.com:username/repostery.git                            //从远程库克隆一个到本地库\")]),t._v(\" \"),i(\"p\",[t._v(\"5、分支\\ngit checkout -b dev                                   //创建并切换分支\\n#相当于git branch dev 和git checkout dev\\ngit branch                                            //查看当前分支，当前分支前有个*号\\ngit branch \"),i(\"name\",[t._v(\"                                   //创建分支\\ngit checkout \"),i(\"name\",[t._v(\"                                //切换分支\\ngit merge \"),i(\"name\",[t._v(\"                                   //合并某个分支到当前分支\\ngit branch -d \"),i(\"name\",[t._v(\"                               //删除分支\\ngit log --graph                                   //查看分支合并图\\ngit merge --no-ff -m 'message' dev                //禁用Fast forward合并dev分支\")])],1)],1)],1)],1),t._v(\" \"),i(\"p\",[t._v(\"git stash                                                 //隐藏当前工作现场，等恢复后继续工作\\ngit stash list                                            //查看stash记录\\ngit stash apply                                         //仅恢复现场，不删除stash内容\\ngit stash drop                                          //删除stash内容\\ngit stash pop                                           //恢复现场的同时删除stash内容\\ngit branch -D \"),i(\"name\",[t._v(\"                              //强行删除某个未合并的分支\")])],1),t._v(\" \"),i(\"p\",[t._v(\"//开发新feature最好新建一个分支\\ngit remote                                               //查看远程仓库\\ngit remote -v                                           //查看远程库详细信息\")]),t._v(\" \"),i(\"p\",[t._v(\"git pull                                                   //抓取远程提交\\ngit checkout -b branch-name origin/branch-name                  //在本地创建和远程分支对应的分支\\ngit branch --set-upstream branch-name origin/branch-name   //建立本地分支和远程分支的关联\")]),t._v(\" \"),i(\"p\",[t._v(\"6、其他---标签/release\\ngit tag v1.0                                                                      //给当前分支最新的commit打标签\\ngit tag -a v0.1 -m 'version 0.1 released' 3628164                 //-a指定标签名，-m指定说明文字\\ngit tag -s \"),i(\"tagname\",[t._v(\" -m 'blabla'                                        //可以用PGP签名标签\\ngit tag                                                                             //查看所有标签\\ngit show v1.0                                                                   //查看标签信息\\ngit tag -d v0.1                                                                 //删除标签\\ngit push origin \"),i(\"tagname\",[t._v(\"                                               //推送某个标签到远程\\ngit push origin --tags                                                       //推送所有尚未推送的本地标签\")])],1)],1),t._v(\" \"),i(\"p\",[t._v(\"git remote -v // 查看当前远程分支\\ngit fetch origin main // 获取远端的origin/main分支\\ngit log -p main..origin/main // 查看本地main和远端origin/main的版本差异\\ngit merge origin/main // 合并远端origin/main分支到当前本地分支\")]),t._v(\" \"),i(\"p\",[t._v(\"7.Git submodule 子模块的管理和使用\\nhttps://www.jianshu.com/p/9000cd49822c\")]),t._v(\" \"),i(\"ul\",[i(\"li\",[t._v(\"如果首次克隆仓库及其模块，使用：\")])]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"git clone --recursive 仓库地址\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\")])]),i(\"ul\",[i(\"li\",[t._v(\"对于仓库首次拉取模块，可以使用：\")])]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"git submodule update --init --recursive\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\")])]),i(\"ul\",[i(\"li\",[t._v(\"更新单个子模块xxx\")])]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"git submodule update --init xxx\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\")])]),i(\"ul\",[i(\"li\",[t._v(\"更新子模块：\")])]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"# 适用于git 1.8.2及以上版本\\ngit submodule update --recursive --remote\\n\\n# 适用于git 1.7.3及以上版本\\ngit submodule update --recursive\\n#或者\\ngit pull --recurse-submodules\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),i(\"br\")])]),i(\"p\",[t._v(\"GitHub改host加速：\")]),t._v(\" \"),i(\"p\",[i(\"img\",{attrs:{src:\"https://gitee.com/Lj_Evan/images/raw/master/git/20210608225024.png\",alt:\"1\"}})]),t._v(\" \"),i(\"p\",[t._v(\"win10下密钥地址一般在：\")]),t._v(\" \"),i(\"p\",[i(\"img\",{attrs:{src:\"https://gitee.com/Lj_Evan/images/raw/master/git/20210608225037.png\",alt:\"2\"}})]),t._v(\" \"),i(\"p\",[t._v(\"YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key\")]),t._v(\" \"),i(\"p\",[i(\"a\",{attrs:{href:\"https://chrischen0405.github.io/2018/11/21/post20181121-2/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://chrischen0405.github.io/2018/11/21/post20181121-2/\"),i(\"OutboundLink\")],1)]),t._v(\" \"),i(\"p\",[t._v(\"gnutls_handshake() failed: The TLS connection was non-properly terminated\\nhttps://blog.csdn.net/songtianlun/article/details/115611734\")]),t._v(\" \"),i(\"h3\",{attrs:{id:\"git更新远程仓库代码到本地\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git更新远程仓库代码到本地\"}},[t._v(\"#\")]),t._v(\" Git更新远程仓库代码到本地\")]),t._v(\" \"),i(\"p\",[t._v(\"当我们在多台电脑上开发一个项目的时候，需要经常修改提交内容并在另一台电脑上更新远程最新的代码，今天看了一下如何从远程代码仓库获取更新到本地，总结了一下网上的文章，采用如下的方式比较简单。\")]),t._v(\" \"),i(\"p\",[t._v(\"当我们在多台电脑上或者多人共同开发一个项目的时候，远程仓库会不时地被修改，而自己也在不断修改自己的本地仓库，因此仓库的远程版本与本地版本势必会导致不一致。比如A同学基于版本1修改了远程仓库并提交了，形成了版本2；B同学的本地仓库是基于版本1的，并对版本1做了自己的修改，当B同学更新本地仓库的时候会自动地将本地仓库与远端版本2仓库合并，这个合并被期望能够保护B同学基于版本1进行的一些修改。\\n这里说明这种情况下，Git的处理机制以及我们保护本地基于旧版本仓库修改的内容的的应对措施。\")]),t._v(\" \"),i(\"p\",[t._v(\"方法一\\n查看远程分支\\n使用如下命令可以查看远程仓库（我这里有一个origin仓库）\")]),t._v(\" \"),i(\"p\",[t._v(\"$ git remote -v\")]),t._v(\" \"),i(\"p\",[t._v(\"从远程获取最新版本到本地\\n使用如下命令可以在本地新建一个temp分支，并将远程origin仓库的master分支代码下载到本地temp分支\")]),t._v(\" \"),i(\"p\",[t._v(\"$ git fetch origin master:temp\")]),t._v(\" \"),i(\"p\",[t._v(\"比较本地仓库与下载的temp分支\\n使用如下命令来比较本地代码与刚刚从远程下载下来的代码的区别：\")]),t._v(\" \"),i(\"p\",[t._v(\"$ git diff temp\")]),t._v(\" \"),i(\"p\",[t._v(\"合并temp分支到本地的master分支\\n对比区别之后，如果觉得没有问题，可以使用如下命令进行代码合并：\")]),t._v(\" \"),i(\"p\",[t._v(\"$ git merge temp\")]),t._v(\" \"),i(\"p\",[t._v(\"删除temp分支\\n如果temp分支不想要保留，可以使用如下命令删除该分支：\")]),t._v(\" \"),i(\"p\",[t._v(\"$ git branch -d temp\")]),t._v(\" \"),i(\"p\",[t._v(\"如果该分支的代码之前没有merge到本地，那么删除该分支会报错，可以使用git branch -D temp强制删除该分支。\")]),t._v(\" \"),i(\"p\",[t._v(\"方法二\\ngit pull的作用是，从远程库中获取某个分支的更新，再与本地指定的分支进行自动merge。完整格式是：\")]),t._v(\" \"),i(\"p\",[t._v(\"$ git pull <远程库名> <远程分支名>:<本地分支名>\\n比如，取回远程库中的develop分支，与本地的develop分支进行merge，要写成：\")]),t._v(\" \"),i(\"p\",[t._v(\"git pull origin develop:develop\\n如果是要与本地当前分支merge，则冒号后面的<本地分支名>可以不写。\")]),t._v(\" \"),i(\"p\",[t._v(\"git pull origin develop\\n通常，git会将本地库分支与远程分支之间建立一种追踪关系。比如，在git clone的时候，所有本地分支默认与远程库的同名分支建立追踪关系。也就是说，本地的master分支自动追踪origin/master分支。因此，如果当前处于本地develop分支上，并且本地develop分支与远程的develop分支有追踪关系，那么远程的分支名可以省略：\")]),t._v(\" \"),i(\"p\",[t._v(\"git pull origin\")]),t._v(\" \"),i(\"p\",[t._v(\"其实，git pull 命令等同于先做了git fetch ，再做了git merge。即：\")]),t._v(\" \"),i(\"p\",[t._v(\"git fetch origin develop\\ngit checkout develop\\ngit merge origin/develop\")]),t._v(\" \"),i(\"p\",[t._v(\"或者\")]),t._v(\" \"),i(\"p\",[t._v(\"git fetch origin master:tmp\\ngit diff tmp\\ngit merge tmp\\ngit branch -d tmp\")]),t._v(\" \"),i(\"h3\",{attrs:{id:\"使用git日常免不了遇到conflicts，那么如何消除conflicts呢\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用git日常免不了遇到conflicts，那么如何消除conflicts呢\"}},[t._v(\"#\")]),t._v(\" 使用git日常免不了遇到conflicts，那么如何消除conflicts呢\")]),t._v(\" \"),i(\"p\",[t._v(\"Step 1: From your project repository, check out a new branch and test the changes.\")]),t._v(\" \"),i(\"p\",[t._v(\"git checkout -b apache-master master\\ngit pull https://github.com/apache/incubator-apisix.git master\")]),t._v(\" \"),i(\"p\",[t._v(\"Step 2: Merge the changes and update on GitHub.\")]),t._v(\" \"),i(\"p\",[t._v(\"git checkout master\\ngit merge --no-ff apache-master\\ngit push origin master\")]),t._v(\" \"),i(\"p\",[t._v(\"以上的的例子， 我们从A合入到B：B <== A。\\nA: https://github.com/apache/incubator-apisix.git\\nB: xxxx/incubator-apisix.git\")]),t._v(\" \"),i(\"p\",[t._v(\"例子中有一个README.md的冲突，并且给出了解决的命令行参考。\\n我们将逐条命令来解释如何按照提示解决冲突。\")]),t._v(\" \"),i(\"p\",[t._v(\"假设我们已经在B的git 根目录下。\\ngit checkout -b apache-master master #建立B的 apache-master分支，并切换到apache-master\\ngit pull https://github.com/apache/incubator-apisix.git master # 将A最新的内容合入apache-master\\n因为有冲突，所以上条执行时，会提示冲突：\\nFrom https://github.com/apache/incubator-apisix\")]),t._v(\" \"),i(\"ul\",[i(\"li\",[t._v('branch            master     -> FETCH_HEAD\\nAuto-merging README.md\\nCONFLICT (content): Merge conflict in README.md\\nAutomatic merge failed; fix conflicts and then commit the result.\\n解决冲突[ ... resolve any conflicts ... ]：手动打开冲突文件，根据提示修改，删除冲突的内容，留下想要的结果内容。\\ngit add [files that were conflicted]\\ngit commit,将冲突修改提交本地仓库：\\ngit commit -m \"resolve the conflict\"\\n[apache-master 6ad2d5e] resolve the conflict\\ngit checkout master # 将B切换为master\\ngit merge --no-ff apache-master #将B仓库的apache-master 合入 master\\ngit push origin master #将B仓库的最终的本地库推到云端master\\n最终解决了冲突，完成了对B master的更新。')])]),t._v(\" \"),i(\"h2\",{attrs:{id:\"挂代理\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#挂代理\"}},[t._v(\"#\")]),t._v(\" 挂代理\")]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"git config --global http.proxy http://169.254.224.64:7890\\ngit config --global https.proxy https://169.254.224.64:7890\\ngit config --global --unset http.proxy\\ngit config --global --unset https.proxy\\nnpm config delete proxy\\ngit config --global http.proxy 'socks5://127.0.0.1:1080'\\ngit config --global https.proxy 'socks5://127.0.0.1:1080'\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),i(\"br\")])]),i(\"p\",[t._v(\"https://www.shuzhiduo.com/A/QV5Z86Xwzy/\\n查看代理：\")]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"git config --global --get http.proxy\\ngit config --global --get https.proxy\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),i(\"br\")])]),i(\"h2\",{attrs:{id:\"pr小知识\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pr小知识\"}},[t._v(\"#\")]),t._v(\" pr小知识\")]),t._v(\" \"),i(\"p\",[t._v(\"https://github.com/aermin/blog/issues/50\")]),t._v(\" \"),i(\"h2\",{attrs:{id:\"解决-git-更新本地冲突：commit-your-changes-or-stash-them-before-you-can-merge\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解决-git-更新本地冲突：commit-your-changes-or-stash-them-before-you-can-merge\"}},[t._v(\"#\")]),t._v(\" 解决 Git 更新本地冲突：commit your changes or stash them before you can merge\")]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"#方法一：stash\\n\\ngit stash\\ngit pull\\ngit stash pop\\n#方法二：直接完全覆盖本地修改\\ngit reset --hard\\ngit pull\\n\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),i(\"br\")])]),i(\"h2\",{attrs:{id:\"详解-git-大文件存储（git-lfs）\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#详解-git-大文件存储（git-lfs）\"}},[t._v(\"#\")]),t._v(\" 详解 Git 大文件存储（Git LFS）\")]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash\\nsudo apt-get install git-lfs\\ngit lfs install\\n\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),i(\"br\"),i(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),i(\"br\")])]),i(\"p\",[t._v(\"https://zhuanlan.zhihu.com/p/146683392\")]),t._v(\" \"),i(\"h2\",{attrs:{id:\"git-pull-强制覆盖本地的代码方式，下面是正确的方法：\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-pull-强制覆盖本地的代码方式，下面是正确的方法：\"}},[t._v(\"#\")]),t._v(\" git pull 强制覆盖本地的代码方式，下面是正确的方法：\")]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"git fetch --all\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\")])]),i(\"p\",[t._v(\"然后，有两个选择：\")]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"git reset --hard origin/master\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\")])]),i(\"p\",[t._v(\"或者在其他分支上：\")]),t._v(\" \"),i(\"div\",{staticClass:\"language- line-numbers-mode\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[t._v(\"git reset --hard origin/<branch_name>\\n\")])]),t._v(\" \"),i(\"div\",{staticClass:\"line-numbers-wrapper\"},[i(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),i(\"br\")])]),i(\"h2\",{attrs:{id:\"git-clone-显示详细log和进度\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-clone-显示详细log和进度\"}},[t._v(\"#\")]),t._v(\" git clone 显示详细log和进度\")]),t._v(\" \"),i(\"p\",[t._v(\"加上--progress和--verbose参数\")])])}),[],!1,null,null,null);e.default=s.exports}}]);","extractedComments":[]}